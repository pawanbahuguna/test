commands:
  approval:
    description: Send a notification that a manual approval job is ready
    parameters:
      channel:
        default: ""
        description: |
          ID of channel if set, overrides webhook's default channel setting
        type: string
      color:
        default: '#3AA3E3'
        description: Hex color value for notification attachment color.
        type: string
      include_job_number_field:
        default: true
        description: |
          Whether or not to include the Job Number field in the message
        type: boolean
      include_project_field:
        default: true
        description: |
          Whether or not to include the Project field in the message
        type: boolean
      mentions:
        default: ""
        description: A comma separated list of user IDs. No spaces.
        type: string
      message:
        default: A workflow in CircleCI is awaiting your approval.
        description: Enter custom message.
        type: string
      url:
        default: https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}
        description: The URL to link back to.
        type: string
      webhook:
        default: ${SLACK_WEBHOOK}
        description: Enter either your Webhook value or use the CircleCI UI to add
          your token under the 'SLACK_WEBHOOK' env var
        type: string
    steps:
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          # Provide error if no webhook is set and error. Otherwise continue
          if [ -z "<< parameters.webhook >>" ]; then
            echo "NO SLACK WEBHOOK SET"
            echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            #Create Members string
            if [ -n "<< parameters.mentions >>" ]; then
              IFS="," read -ra SLACK_MEMBERS \<<< "<< parameters.mentions >>"
              for i in "${SLACK_MEMBERS[@]}"; do
                if [ $(echo ${i} | head -c 1) == "S" ]; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                else
                  SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                fi
              done
            fi

            curl -X POST -H 'Content-type: application/json' \
              --data \
              "{ \
                <<# parameters.channel >>
                \"channel\": \"<< parameters.channel >>\", \
                <</ parameters.channel >>
                \"attachments\": [ \
                  { \
                    \"fallback\": \"<< parameters.message >> - << parameters.url >>\", \
                    \"text\": \"<< parameters.message >> $SLACK_MENTIONS\", \
                    \"fields\": [ \
                      <<# parameters.include_project_field >>
                      { \
                        \"title\": \"Project\", \
                        \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                        \"short\": true \
                      }, \
                      <</ parameters.include_project_field >>
                      <<# parameters.include_job_number_field >>
                      { \
                        \"title\": \"Job Number\", \
                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                        \"short\": true \
                      } \
                      <</ parameters.include_job_number_field >>
                    ], \
                    \"actions\": [ \
                      { \
                        \"type\": \"button\", \
                        \"text\": \"Visit Workflow\", \
                        \"url\": \"<< parameters.url >>\" \
                      } \
                    ], \
                    \"color\": \"<< parameters.color >>\" \
                  } \
                ] \
              }" << parameters.webhook >>
            echo "Awaiting approval notified."
          fi
        name: Slack - Sending Approval Notification
        shell: /bin/bash
  notify:
    description: Notify a Slack channel with a custom message
    parameters:
      author_link:
        default: ""
        description: Optional author link
        type: string
      author_name:
        default: ""
        description: Optional author name
        type: string
      channel:
        default: ""
        description: |
          ID of channel if set, overrides webhook's default channel setting
        type: string
      color:
        default: '#333333'
        description: Hex color value for notification attachment color.
        type: string
      footer:
        default: ""
        description: Optional footer
        type: string
      include_job_number_field:
        default: true
        description: Whether or not to include the Job Number field in the message
        type: boolean
      include_project_field:
        default: true
        description: Whether or not to include the Project field in the message
        type: boolean
      include_visit_job_action:
        default: true
        description: Whether or not to include the Visit Job action in the message
        type: boolean
      mentions:
        default: ""
        description: A comma separated list of user IDs. No spaces.
        type: string
      message:
        default: Your job on CircleCI has completed.
        description: Enter custom message.
        type: string
      title:
        default: ""
        description: Optional title
        type: string
      title_link:
        default: ""
        description: Optional title link
        type: string
      ts:
        default: ""
        description: Optional timestamp
        type: string
      webhook:
        default: ${SLACK_WEBHOOK}
        description: Enter either your Webhook value or use the CircleCI UI to add
          your token under the 'SLACK_WEBHOOK' env var
        type: string
    steps:
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          # Provide error if no webhook is set and error. Otherwise continue
          if [ -z "<< parameters.webhook >>" ]; then
            echo "NO SLACK WEBHOOK SET"
            echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            # Webhook properly set.
            echo Notifying Slack Channel
            #Create Members string
            if [ -n "<< parameters.mentions >>" ]; then
              IFS="," read -ra SLACK_MEMBERS \<<< "<< parameters.mentions >>"
              for i in "${SLACK_MEMBERS[@]}"; do
                if [ $(echo ${i} | head -c 1) == "S" ]; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                else
                  SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                fi
              done
            fi
            curl -X POST -H 'Content-type: application/json' \
              --data \
              "{ \
                <<# parameters.channel >>
                \"channel\": \"<< parameters.channel >>\", \
                <</ parameters.channel >>
                \"attachments\": [ \
                  { \
                    \"fallback\": \"<< parameters.message >> - $CIRCLE_BUILD_URL\", \
                    \"text\": \"<< parameters.message >> $SLACK_MENTIONS\", \
                    \"author_name\": \"<< parameters.author_name >>\", \
                    \"author_link\": \"<< parameters.author_link >>\", \
                    \"title\": \"<< parameters.title >>\", \
                    \"title_link\": \"<< parameters.title_link >>\", \
                    \"footer\": \"<< parameters.footer >>\", \
                    \"ts\": \"<< parameters.ts >>\", \
                    \"fields\": [ \
                      <<# parameters.include_project_field >>
                      { \
                        \"title\": \"Project\", \
                        \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                        \"short\": true \
                      }, \
                      <</ parameters.include_project_field >>
                      <<# parameters.include_job_number_field >>
                      { \
                        \"title\": \"Job Number\", \
                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                        \"short\": true \
                      } \
                      <</ parameters.include_job_number_field >>
                    ], \
                    \"actions\": [ \
                      <<# parameters.include_visit_job_action >>
                      { \
                        \"type\": \"button\", \
                        \"text\": \"Visit Job\", \
                        \"url\": \"$CIRCLE_BUILD_URL\" \
                      } \
                      <</ parameters.include_visit_job_action >>
                    ], \
                    \"color\": \"<< parameters.color >>\" \
                  } \
                ] \
              }" << parameters.webhook >>
          fi
        name: Slack Notification
        shell: /bin/bash
  notify-on-failure:
    description: |
      A handy command to notify a Slack channel on failure in the default master branch
    parameters:
      only_for_branches:
        default: ""
        description: |
          If set, a comma-separated list of branches for which to send notifications. No spaces.
        type: string
    steps:
    - status:
        fail_only: true
        only_for_branches: <<parameters.only_for_branches>>
  status:
    description: |
      Send a status alert at the end of a job based on success or failure. Must be the last step in a job.
    parameters:
      channel:
        default: ""
        description: |
          ID of channel if set, overrides webhook's default channel setting
        type: string
      fail_only:
        default: false
        description: |
          If `true`, notifications successful jobs will not be sent
        type: boolean
      failure_message:
        default: ':red_circle: A $CIRCLE_JOB job has failed!'
        description: Enter custom message.
        type: string
      include_job_number_field:
        default: true
        description: |
          Whether or not to include the Job Number field in the message
        type: boolean
      include_project_field:
        default: true
        description: |
          Whether or not to include the Project field in the message
        type: boolean
      include_visit_job_action:
        default: true
        description: |
          Whether or not to include the Visit Job action in the message
        type: boolean
      mentions:
        default: ""
        description: |
          A comma separated list of user IDs. No spaces.
        type: string
      only_for_branches:
        default: ""
        description: |
          If set, a comma-separated list of branches for which to send notifications. No spaces.
        type: string
      success_message:
        default: ':tada: A $CIRCLE_JOB job has succeeded!'
        description: Enter custom message.
        type: string
      webhook:
        default: ${SLACK_WEBHOOK}
        description: |
          Enter either your Webhook value or use the CircleCI UI to add your token under the 'SLACK_WEBHOOK' env var
        type: string
    steps:
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
        name: Slack - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
        name: Slack - Setting Success Condition
        when: on_success
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          current_branch_in_filter=false

          IFS="," read -ra BRANCH_FILTERS \<<< "<< parameters.only_for_branches >>"

          for i in "${BRANCH_FILTERS[@]}"; do
            if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
              current_branch_in_filter=true
            fi
          done

          if [ "x" == "x<< parameters.only_for_branches>>" ] || [ "$current_branch_in_filter" = true ]; then
            # Provide error if no webhook is set and error. Otherwise continue
            if [ -z "<< parameters.webhook >>" ]; then
              echo "NO SLACK WEBHOOK SET"
              echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              #Create Members string
              if [ -n "<< parameters.mentions >>" ]; then
                IFS="," read -ra SLACK_MEMBERS \<<< "<< parameters.mentions >>"
                for i in "${SLACK_MEMBERS[@]}"; do
                  if [ $(echo ${i} | head -c 1) == "S" ]; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                  elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                  else
                    SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                  fi
                done
              fi
              #If successful
              if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                #Skip if fail_only
                if [ << parameters.fail_only >> = true ]; then
                  echo "The job completed successfully"
                  echo '"fail_only" is set to "true". No Slack notification sent.'
                else
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                              <<# parameters.channel >>
                              \"channel\": \"<< parameters.channel >>\", \
                              <</ parameters.channel >>
                              \"attachments\": [ \
                                { \
                                  \"fallback\": \"<< parameters.success_message >>\", \
                                  \"text\": \"<< parameters.success_message >> $SLACK_MENTIONS\", \
                                  \"fields\": [ \
                                    <<# parameters.include_project_field >>
                                    { \
                                      \"title\": \"Project\", \
                                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                      \"short\": true \
                                    }, \
                                    <</ parameters.include_project_field >>
                                    <<# parameters.include_job_number_field >>
                                    { \
                                      \"title\": \"Job Number\", \
                                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                                      \"short\": true \
                                    } \
                                    <</ parameters.include_job_number_field >>
                                  ], \
                                  \"actions\": [ \
                                    <<# parameters.include_visit_job_action >>
                                    { \
                                      \"type\": \"button\", \
                                      \"text\": \"Visit Job\", \
                                      \"url\": \"$CIRCLE_BUILD_URL\" \
                                    } \
                                    <</ parameters.include_visit_job_action >>
                                  ], \
                                  \"color\": \"#1CBF43\" \
                                } \
                              ] \
                            } " << parameters.webhook >>
                  echo "Job completed successfully. Alert sent."
                fi
              else
                #If Failed
                curl -X POST -H 'Content-type: application/json' \
                  --data "{ \
                    <<# parameters.channel >>
                    \"channel\": \"<< parameters.channel >>\", \
                    <</ parameters.channel >>
                    \"attachments\": [ \
                      { \
                        \"fallback\": \"<< parameters.failure_message >>\", \
                        \"text\": \"<< parameters.failure_message >> $SLACK_MENTIONS\", \
                        \"fields\": [ \
                          <<# parameters.include_project_field >>
                          { \
                            \"title\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"short\": true \
                          }, \
                          <</ parameters.include_project_field >>
                          <<# parameters.include_job_number_field >>
                          { \
                            \"title\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"short\": true \
                          } \
                          <</ parameters.include_job_number_field >>
                        ], \
                        \"actions\": [ \
                          <<# parameters.include_visit_job_action >>
                          { \
                            \"type\": \"button\", \
                            \"text\": \"Visit Job\", \
                            \"url\": \"$CIRCLE_BUILD_URL\" \
                          } \
                          <</ parameters.include_visit_job_action >>
                        ], \
                        \"color\": \"#ed5c5c\" \
                      } \
                    ] \
                  } " << parameters.webhook >>
                echo "Job failed. Alert sent."
              fi
            fi
          else
            echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
          fi
        name: Slack - Sending Status Alert
        shell: /bin/bash
        when: always
description: |
  Easily integrate custom Slack notifications into your CircleCI projects. Create custom alert messages for any job or receive status updates. View this orb's source: https://github.com/CircleCI-Public/slack-orb
examples:
  approval:
    description: Notify a slack channel of a pending approval.
    usage:
      orbs:
        slack: circleci/slack@x.y.z
      version: 2.1
      workflows:
        your-workflow:
          jobs:
          - slack/approval-notification:
              message: Pending approval
              webhook: webhook
  notify:
    description: 'Notify a slack channel with a custom message at any point in a job
      with this custom step. More docs here: https://github.com/CircleCI-Public/slack-orb'
    usage:
      jobs:
        build:
          docker:
          - image: <docker image>
          steps:
          - slack/notify:
              channel: CHANNELID
              color: '#42e2f4'
              mentions: USERID1,USERID2,
              message: This is a custom message notification
              webhook: webhook
      orbs:
        slack: circleci/slack@x.y.z
      version: 2.1
      workflows:
        your-workflow:
          jobs:
          - build
  status:
    description: Send a status alert at the end of a job based on success or failure.
      This must be the last step in a job.
    usage:
      jobs:
        build:
          docker:
          - image: <docker image>
          steps:
          - run: exit 0
          - slack/status:
              fail_only: true
              mentions: USERID1,USERID2
              only_for_branches: only_for_branches
              webhook: webhook
      orbs:
        slack: circleci/slack@x.y.z
      version: 2.1
executors:
  alpine:
    docker:
    - environment:
        TERM: dumb
      image: cibuilds/base:latest
    resource_class: small
jobs:
  approval-notification:
    description: Notify Slack about an awaiting approval job
    executor: alpine
    parameters:
      channel:
        default: ""
        description: |
          ID of channel if set, overrides webhook's default channel setting
        type: string
      color:
        default: '#3AA3E3'
        description: Hex color value for notification attachment color.
        type: string
      include_job_number_field:
        default: true
        description: |
          Whether or not to include the Job Number field in the message
        type: boolean
      include_project_field:
        default: true
        description: |
          Whether or not to include the Project field in the message
        type: boolean
      mentions:
        default: ""
        description: A comma separated list of user IDs. No spaces.
        type: string
      message:
        default: A workflow in CircleCI is awaiting your approval.
        description: Enter custom message.
        type: string
      url:
        default: https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}
        description: The URL to link back to.
        type: string
      webhook:
        default: ${SLACK_WEBHOOK}
        description: Enter either your Webhook value or use the CircleCI UI to add
          your token under the 'SLACK_WEBHOOK' env var
        type: string
    steps:
    - approval:
        channel: << parameters.channel >>
        color: << parameters.color >>
        include_job_number_field: << parameters.include_job_number_field >>
        include_project_field: << parameters.include_project_field >>
        mentions: << parameters.mentions >>
        message: << parameters.message >>
        url: << parameters.url >>
        webhook: << parameters.webhook >>
version: 2.1
